<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Oop on Documentation for Umuzi Tech Department</title>
    <link>/tech-department/tags/oop/</link>
    <description>Recent content in Oop on Documentation for Umuzi Tech Department</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    
	<atom:link href="/tech-department/tags/oop/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Animals Part 1. OOP basics</title>
      <link>/tech-department/projects/oop/animals/part1/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/tech-department/projects/oop/animals/part1/</guid>
      <description>Project structure Java The code you push to git should have the following structure:
├── build.gradle ├── gradle │ └── wrapper │ ├── gradle-wrapper.jar │ └── gradle-wrapper.properties ├── gradlew ├── gradlew.bat ├── settings.gradle └── src ├── main └── java ├── Animal.java &amp;lt;-------- names are important ├── Cat.java &amp;lt;-------- names are important ├── Dog.java &amp;lt;-------- names are important ├── Home.java &amp;lt;-------- names are important └── MainProgram.java &amp;lt;-------- names are important  Please refer to the following to find out more: TOPICS: [TODO] Java project submission requirements Instructions This Challenge should test topics from your OOP knowledge</description>
    </item>
    
    <item>
      <title>Animals Part 2. Adding Tests</title>
      <link>/tech-department/projects/oop/animals/part2/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/tech-department/projects/oop/animals/part2/</guid>
      <description>In this challenge you will update your current Animals project and add unit tests to the project
Project structure Java The code you push to git should have the following structure:
├── build.gradle ├── gradle │ └── wrapper │ ├── gradle-wrapper.jar │ └── gradle-wrapper.properties ├── gradlew ├── gradlew.bat ├── settings.gradle └── src ├── main | └── java | ├── Animal.java &amp;lt;-------- names are important | ├── Cat.java &amp;lt;-------- names are important | ├── Dog.</description>
    </item>
    
    <item>
      <title>Object-Oriented Programming</title>
      <link>/tech-department/topics/ncit/115378/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/tech-department/topics/ncit/115378/</guid>
      <description></description>
    </item>
    
    <item>
      <title>Person</title>
      <link>/tech-department/projects/oop/person/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/tech-department/projects/oop/person/</guid>
      <description>Project structure Java The code you push to git should have the following structure:
├── build.gradle ├── gradle │ └── wrapper │ ├── gradle-wrapper.jar │ └── gradle-wrapper.properties ├── gradlew ├── gradlew.bat ├── settings.gradle └── src ├── main └── java ├── Person.java &amp;lt;-------- names are important └── MainProgram.java &amp;lt;-------- names are important  Please refer to the following to find out more: TOPICS: [TODO] Java project submission requirements Instructions Please follow TDD when implementing this code if you have covered TDD in your course.</description>
    </item>
    
    <item>
      <title>Python OOP basics</title>
      <link>/tech-department/topics/python-specific/oop-basics/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/tech-department/topics/python-specific/oop-basics/</guid>
      <description></description>
    </item>
    
  </channel>
</rss>