<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Node on Documentation for Umuzi Tech Department</title>
    <link>/tech-department/tags/node/</link>
    <description>Recent content in Node on Documentation for Umuzi Tech Department</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    
	<atom:link href="/tech-department/tags/node/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Add a little Ajax</title>
      <link>/tech-department/projects/nodejs/ajax/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/tech-department/projects/nodejs/ajax/</guid>
      <description>There is no need to create a new git repo for this code submission. This is a continuation of your previous work.
a new static resource Create a new HTML static web page just like the form page you made before. You can even copy-paste your form&amp;rsquo;s html here. Usually copy-pasting pieces of code is a bad idea, this time it&amp;rsquo;s ok.
Serve your new page from the following url: http://localhost:[YOUR_PORT]/single-page-app</description>
    </item>
    
    <item>
      <title>Expose a JSON API</title>
      <link>/tech-department/projects/nodejs/api/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/tech-department/projects/nodejs/api/</guid>
      <description> There is no need to create a new git repo for this code submission. This is a continuation of your previous work.
Instructions Use Express to expose the following JSON endpoints.
 /addNewVisitor: create a new Visitor in the database /deleteVisitor:id: delete a single Visitor from the database /deleteAllVisitors: delete all Visitors /viewVisitors: view all Visitors /viewVisitor:id: view a single Visitor /updateVisitor:id: Update a single Visitor  Resources   TOPICS: API basics   TOPICS: APIs and Node   </description>
    </item>
    
    <item>
      <title>Express, forms and templates</title>
      <link>/tech-department/projects/nodejs/express-forms/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/tech-department/projects/nodejs/express-forms/</guid>
      <description>There is no need to create a new git repo for this code submission. This is a continuation of your previous work.
create a basic html form Create an HTML form. This form will (eventually) be used to create Visitor fields in your mongo database. Your form should have the following fields:
 visitor name your name (name of the person who assisted the visitor) visitor&amp;rsquo;s age date of visit time of visit comments  use express to host the form as a static resource Create a basic express.</description>
    </item>
    
    <item>
      <title>Node &amp; File IO</title>
      <link>/tech-department/projects/nodejs/file-io/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/tech-department/projects/nodejs/file-io/</guid>
      <description>You are required to create a back-end service that will help capture basic information about prospective students who come to inquire here at Umuzi. In this project you&amp;rsquo;ll just be storing and retrieving information from plain old json files.
Instructions Create the following functionality in a TDD way.
 Create a class called Visitor. Instances of this class should have the following properties:   full name age date of visit time of visit comments name of the person who assisted the visitor   Create a function called save that saves the visitor&amp;rsquo;s data to a JSON file.</description>
    </item>
    
    <item>
      <title>Node &amp; SQL assignment</title>
      <link>/tech-department/projects/nodejs/sql/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/tech-department/projects/nodejs/sql/</guid>
      <description>You are required to create a back-end service that will help capture basic information about prospective students who come to inquire here at Umuzi.
database setup  Set up a postgresql database on your computer. Please use Docker to do this. You can find more information here: TOPICS: Intro to Docker and Docker-compose  Create a table inside the database and name it Visiters. The table must contain the following fields :   id: This should be automatically generated by SQL visitor name visitor&amp;rsquo;s age date of visit time of visit name of the person who assisted the visitor comments  Helloworld Before you dive into anything too intense, let&amp;rsquo;s make sure that you can get node to connect to your database.</description>
    </item>
    
  </channel>
</rss>